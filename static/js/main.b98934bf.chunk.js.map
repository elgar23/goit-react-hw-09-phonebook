{"version":3,"sources":["redux/Auth/authSelectors.js","redux/Contacts/listAction.js","Components/NavBar/NavBar.module.css","Components/Navigation/Navigation.module.css","redux/Auth/authOperation.js","redux/Auth/authAction.js","Components/UserMenu/UserMenu.module.css","Components/AppBar/AppBar.module.css","Components/NavBar/NavBar.js","Components/Navigation/Navigation.js","img/404_error.jpg","Components/UserMenu/UserMenu.js","Components/AppBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","reportWebVitals.js","redux/Contacts/deleteListReduser.js","redux/Auth/authReduser.js","redux/store.js","index.js"],"names":["getIsAutheticated","state","auth","isAuthenticated","getUserName","user","name","getUserEmail","email","fetchStart","createAction","fetchSuccess","fetchError","addStart","addSuccess","addError","deleteStart","deleteSuccess","deleteError","upStart","upSuccess","upError","filterList","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","registerAuth","credentials","dispatch","a","registerStart","post","response","data","registerSuccess","registerError","message","loginAuth","loginStart","loginSuccess","loginError","logOutAuth","logoutStart","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","getCurrentUserStart","get","getCurrentUserSuccess","getCurrentUserError","NavBar","isLoggedIn","useSelector","className","s","ul","exact","to","navLink","activeClassName","navLinkactive","Navigation","UserMenu","useDispatch","onLogout","useCallback","src","avatar","alt","width","type","onClick","AppBar","div","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomePage","lazy","Login","Register","Contacts","App","onRefresh","useEffect","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","createReducer","_","payload","filter","contact","id","combineReducers","initial","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReduser","contacts","deleteListReduser","preStor","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b98934bf.chunk.js","sourcesContent":["const getIsAutheticated = state => state.auth.isAuthenticated;\nconst getUserName = state => state.auth.user.name;\nconst getUserEmail = state => state.auth.user.email;\n\nexport { getIsAutheticated, getUserName, getUserEmail };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchStart = createAction('fetchStart');\nexport const fetchSuccess = createAction('fetchSuccess');\nexport const fetchError = createAction('fetchError');\n\nexport const addStart = createAction('addStart');\nexport const addSuccess = createAction('addSuccess');\nexport const addError = createAction('addError');\n\nexport const deleteStart = createAction('deleteStart');\nexport const deleteSuccess = createAction('deleteSuccess');\nexport const deleteError = createAction('deleteError');\n\nexport const upStart = createAction('upStart');\nexport const upSuccess = createAction('upSuccess');\nexport const upError = createAction('upError');\n\nexport const filterList = createAction('filterList');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavBar_navLink__1D809\",\"navLinkactive\":\"NavBar_navLinkactive__LpWLp\",\"ul\":\"NavBar_ul__2e0qf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__3h1ga\",\"navLinkactive\":\"Navigation_navLinkactive__1mbE2\",\"ul\":\"Navigation_ul__2oFCK\"};","import axios from 'axios';\nimport {\n  loginStart,\n  loginSuccess,\n  loginError,\n  registerStart,\n  registerSuccess,\n  registerError,\n  logoutStart,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserStart,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './authAction';\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst registerAuth = credentials => async dispatch => {\n  dispatch(registerStart());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst loginAuth = credentials => async dispatch => {\n  dispatch(loginStart());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logOutAuth = () => async dispatch => {\n  dispatch(logoutStart());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(getCurrentUserStart());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\n\nexport { registerAuth, loginAuth, logOutAuth, getCurrentUser };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerStart = createAction('registerStart');\nexport const registerSuccess = createAction('registerSuccess');\nexport const registerError = createAction('registerError');\n\nexport const loginStart = createAction('loginStart');\nexport const loginSuccess = createAction('loginSuccess');\nexport const loginError = createAction('loginError');\n\nexport const logoutStart = createAction('logoutStart');\nexport const logoutSuccess = createAction('logoutSuccess');\nexport const logoutError = createAction('logoutError');\n\nexport const getCurrentUserStart = createAction('getCurrentUserStart');\nexport const getCurrentUserSuccess = createAction('getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('getCurrentUserError');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"UserMenu_navLink__1IZ64\",\"navLinkactive\":\"UserMenu_navLinkactive__1Hf_6\",\"ul\":\"UserMenu_ul__UK7eF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"AppBar_div__3f3em\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getIsAutheticated } from '../../redux/Auth/authSelectors';\nimport s from './NavBar.module.css';\n\nfunction NavBar() {\n  const isLoggedIn = useSelector(getIsAutheticated);\n\n  return (\n    <ul className={s.ul}>\n      <li>\n        <NavLink\n          exact\n          to=\"/\"\n          className={s.navLink}\n          activeClassName={s.navLinkactive}\n        >\n          Главная\n        </NavLink>\n      </li>\n      {isLoggedIn && (\n        <li>\n          <NavLink\n            to=\"/contacts\"\n            className={s.navLink}\n            activeClassName={s.navLinkactive}\n          >\n            Контакты\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navigation.module.css';\n\nexport default function Navigation() {\n  return (\n    <ul className={s.ul}>\n      <li>\n        <NavLink\n          to=\"/login\"\n          className={s.navLink}\n          activeClassName={s.navLinkactive}\n        >\n          Войти\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to=\"/register\"\n          className={s.navLink}\n          activeClassName={s.navLinkactive}\n        >\n          Регистрация\n        </NavLink>\n      </li>\n    </ul>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/404_error.a378b0df.jpg\";","import React, { useCallback } from 'react';\nimport s from './UserMenu.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport avatar from '../../img/404_error.jpg';\nimport { getUserEmail } from '../../redux/Auth/authSelectors';\nimport { logOutAuth } from '../../redux/Auth/authOperation';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const email = useSelector(getUserEmail);\n  const onLogout = useCallback(() => {\n    dispatch(logOutAuth());\n  }, [dispatch]);\n\n  return (\n    <div className={s.ul}>\n      <img src={avatar} alt=\"\" width=\"32\" className={s.navLink} />\n      <span className={s.navLink}>{email}</span>\n      <button type=\"button\" onClick={onLogout}>\n        Выйти\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport NavBar from '../NavBar/NavBar';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport s from './AppBar.module.css';\nimport { getIsAutheticated } from '../../redux/Auth/authSelectors';\n\nexport const AppBar = () => {\n  const isAuthenticated = useSelector(getIsAutheticated);\n\n  return (\n    <div className={s.div}>\n      <NavBar />\n      {isAuthenticated ? <UserMenu /> : <Navigation />}\n    </div>\n  );\n};\n\nexport default AppBar;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsAutheticated } from '../redux/Auth/authSelectors';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsAutheticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getIsAutheticated } from '../redux/Auth/authSelectors';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(getIsAutheticated);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { Suspense, lazy, useCallback, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport AppBar from './Components/AppBar/AppBar';\nimport { getCurrentUser } from './redux/Auth/authOperation';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\n\nconst HomePage = lazy(() =>\n  import('./Page/HomePage/HomePage' /*webpackChunkName: \"HomePage\"*/),\n);\nconst Login = lazy(() =>\n  import('./Page/Login/Login' /*webpackChunkName: \"Login\"*/),\n);\nconst Register = lazy(() =>\n  import('./Page/Register/Register' /*webpackChunkName: \"Register\"*/),\n);\nconst Contacts = lazy(() =>\n  import('./Page/Contacts/Contacts' /*webpackChunkName: \"Contacts\"*/),\n);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const onRefresh = useCallback(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    onRefresh();\n  }, [onRefresh]);\n\n  return (\n    <>\n      <AppBar />\n      <Suspense fallback={<h1>Lodding...</h1>}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            // component={HomePage}\n          >\n            <HomePage />\n          </Route>\n          <PrivateRoute\n            path=\"/contacts\"\n            // component={Contacts}\n            redirectTo=\"/login\"\n          >\n            <Contacts />\n          </PrivateRoute>\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            redirectTo=\"/\"\n            // component={Login}\n          >\n            <Login />\n          </PublicRoute>\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            redirectTo=\"/\"\n            // component={Register}\n          >\n            <Register />\n          </PublicRoute>\n          <Route\n          // component={HomePage}\n          >\n            <HomePage />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  deleteSuccess,\n  filterList,\n  addSuccess,\n  fetchSuccess,\n  upSuccess,\n} from './listAction';\n\nconst items = createReducer([], {\n  [fetchSuccess]: (_, { payload }) => payload,\n  [addSuccess]: (state, { payload }) => [...state, payload],\n  [deleteSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [upSuccess]: (state, { payload }) => [...state, payload],\n});\n\nconst filter = createReducer('', {\n  [filterList]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './authAction';\n\nconst initial = { name: null, email: null };\n\nconst user = createReducer(initial, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initial,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [logoutSuccess]: () => false,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  isAuthenticated,\n  user,\n  token,\n  error,\n});\n","import deleteListReduser from './Contacts/deleteListReduser';\nimport authReduser from './Auth/authReduser';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReduser),\n    contacts: deleteListReduser,\n  },\n  middleware,\n});\nconst persistor = persistStore(store);\n\nconst preStor = { store, persistor };\n\nexport default preStor;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from '../src/redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}